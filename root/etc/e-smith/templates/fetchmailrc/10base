#
# 10base
#
{
    use esmith::db;

    $OUT = '';

    my %fetchmails;
    tie %fetchmails, 'esmith::config', "/var/lib/nethserver/db/fetchmail";

    open(DOVEUSERS, '/usr/bin/timeout -s KILL 10s /usr/bin/doveadm user \* |');
    my @doveusers = ();
    while(<DOVEUSERS>) {
	chomp;
	push @doveusers, $_;
    }
    close(DOVEUSERS);

    # Create assignments for each fetchmail.
    foreach (db_get(\%fetchmails))
    {
        my $active = db_get_prop(\%fetchmails, $_, "active") || 'YES';
        my $nokeep = db_get_prop(\%fetchmails, $_, "nokeep") || 'YES';
        my $ssl = db_get_prop(\%fetchmails, $_, "ssl") || 'NO';
        my $popserver = db_get_prop(\%fetchmails, $_, "popserver") || next;
        my $username = db_get_prop(\%fetchmails, $_, "username");
        my $password = db_get_prop(\%fetchmails, $_, "password");
        my $account = db_get_prop(\%fetchmails, $_, "account");
        my $proto = db_get_prop(\%fetchmails, $_, "proto") || 'pop3';
      
	if( ! grep { $_ eq $account } @doveusers ) {
	    warn "[WARNING] non available account `$account` has been skipped! Check your configuration.\n";

        } elsif ($active eq 'YES') {
                $OUT.="poll $popserver proto $proto:\n user \"$username\"";
                $OUT .= sprintf(' with pass "%s" is "%s@localhost" here', $password, $account);
                $OUT.=" smtphost $smtphost\n";
                $OUT.=" antispam -1";

		if ($ssl eq 'YES') {
		    $OUT .= ' ssl';
		}
		if ($nokeep eq 'NO') {
		    $OUT .= ' keep';
		}
		$OUT .= "\n";
        }
    }
}


